/* THIS IS AN AUTOGENERATED FILE.  DO NOT EDIT */

/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* vim: set ts=8 sts=2 et sw=2 tw=80: */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. */

[Exposed=Window, Pref="layout.css.anchor-positioning.enabled"]
interface CSSPositionTryDescriptors : CSSStyleDeclaration {
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_align_self), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="align-self", BindingAlias="WebkitAlignSelf", BindingAlias="-webkit-align-self", BindingAlias="webkitAlignSelf"] attribute [LegacyNullToEmptyString] UTF8String alignSelf;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_justify_self), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="justify-self"] attribute [LegacyNullToEmptyString] UTF8String justifySelf;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_position_area), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.anchor-positioning.enabled", BindingAlias="position-area"] attribute [LegacyNullToEmptyString] UTF8String positionArea;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_position_anchor), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.anchor-positioning.enabled", BindingAlias="position-anchor"] attribute [LegacyNullToEmptyString] UTF8String positionAnchor;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_max_block_size), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="max-block-size"] attribute [LegacyNullToEmptyString] UTF8String maxBlockSize;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_max_height), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="max-height"] attribute [LegacyNullToEmptyString] UTF8String maxHeight;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_max_inline_size), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="max-inline-size"] attribute [LegacyNullToEmptyString] UTF8String maxInlineSize;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_max_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="max-width"] attribute [LegacyNullToEmptyString] UTF8String maxWidth;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_bottom), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String bottom;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_inset_block_end), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="inset-block-end"] attribute [LegacyNullToEmptyString] UTF8String insetBlockEnd;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_inset_block_start), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="inset-block-start"] attribute [LegacyNullToEmptyString] UTF8String insetBlockStart;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_inset_inline_end), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="inset-inline-end"] attribute [LegacyNullToEmptyString] UTF8String insetInlineEnd;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_inset_inline_start), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="inset-inline-start"] attribute [LegacyNullToEmptyString] UTF8String insetInlineStart;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_left), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String left;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_right), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String right;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_top), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String top;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_margin_block_end), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="margin-block-end"] attribute [LegacyNullToEmptyString] UTF8String marginBlockEnd;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_margin_block_start), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="margin-block-start"] attribute [LegacyNullToEmptyString] UTF8String marginBlockStart;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_margin_bottom), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="margin-bottom"] attribute [LegacyNullToEmptyString] UTF8String marginBottom;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_margin_inline_end), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="margin-inline-end", BindingAlias="-moz-margin-end", BindingAlias="MozMarginEnd"] attribute [LegacyNullToEmptyString] UTF8String marginInlineEnd;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_margin_inline_start), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="margin-inline-start", BindingAlias="-moz-margin-start", BindingAlias="MozMarginStart"] attribute [LegacyNullToEmptyString] UTF8String marginInlineStart;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_margin_left), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="margin-left"] attribute [LegacyNullToEmptyString] UTF8String marginLeft;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_margin_right), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="margin-right"] attribute [LegacyNullToEmptyString] UTF8String marginRight;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_margin_top), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="margin-top"] attribute [LegacyNullToEmptyString] UTF8String marginTop;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_block_size), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="block-size"] attribute [LegacyNullToEmptyString] UTF8String blockSize;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_height), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String height;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_inline_size), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="inline-size"] attribute [LegacyNullToEmptyString] UTF8String inlineSize;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_min_block_size), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="min-block-size"] attribute [LegacyNullToEmptyString] UTF8String minBlockSize;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_min_height), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="min-height"] attribute [LegacyNullToEmptyString] UTF8String minHeight;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_min_inline_size), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="min-inline-size"] attribute [LegacyNullToEmptyString] UTF8String minInlineSize;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_min_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="min-width"] attribute [LegacyNullToEmptyString] UTF8String minWidth;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String width;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_margin), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String margin;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_margin_block), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="margin-block"] attribute [LegacyNullToEmptyString] UTF8String marginBlock;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_margin_inline), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="margin-inline"] attribute [LegacyNullToEmptyString] UTF8String marginInline;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_place_self), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="place-self"] attribute [LegacyNullToEmptyString] UTF8String placeSelf;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_inset), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String inset;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_inset_block), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="inset-block"] attribute [LegacyNullToEmptyString] UTF8String insetBlock;
  [BindingTemplate=(CSSPositionTryDescriptor, eCSSProperty_inset_inline), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="inset-inline"] attribute [LegacyNullToEmptyString] UTF8String insetInline;
};