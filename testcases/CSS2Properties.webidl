/* THIS IS AN AUTOGENERATED FILE.  DO NOT EDIT */

/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* vim: set ts=8 sts=2 et sw=2 tw=80: */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. */

[Exposed=Window]
interface CSS2Properties : CSSStyleDeclaration {
  [BindingTemplate=(CSS2Property, eCSSProperty_align_content), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="align-content", BindingAlias="WebkitAlignContent", BindingAlias="-webkit-align-content", BindingAlias="webkitAlignContent"] attribute [LegacyNullToEmptyString] UTF8String alignContent;
  [BindingTemplate=(CSS2Property, eCSSProperty_align_items), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="align-items", BindingAlias="WebkitAlignItems", BindingAlias="-webkit-align-items", BindingAlias="webkitAlignItems"] attribute [LegacyNullToEmptyString] UTF8String alignItems;
  [BindingTemplate=(CSS2Property, eCSSProperty_align_self), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="align-self", BindingAlias="WebkitAlignSelf", BindingAlias="-webkit-align-self", BindingAlias="webkitAlignSelf"] attribute [LegacyNullToEmptyString] UTF8String alignSelf;
  [BindingTemplate=(CSS2Property, eCSSProperty_aspect_ratio), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="aspect-ratio"] attribute [LegacyNullToEmptyString] UTF8String aspectRatio;
  [BindingTemplate=(CSS2Property, eCSSProperty_backface_visibility), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="backface-visibility", BindingAlias="WebkitBackfaceVisibility", BindingAlias="-webkit-backface-visibility", BindingAlias="webkitBackfaceVisibility"] attribute [LegacyNullToEmptyString] UTF8String backfaceVisibility;
  [BindingTemplate=(CSS2Property, eCSSProperty_baseline_source), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="baseline-source"] attribute [LegacyNullToEmptyString] UTF8String baselineSource;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_collapse), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-collapse"] attribute [LegacyNullToEmptyString] UTF8String borderCollapse;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_image_repeat), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-image-repeat"] attribute [LegacyNullToEmptyString] UTF8String borderImageRepeat;
  [BindingTemplate=(CSS2Property, eCSSProperty_box_decoration_break), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="box-decoration-break"] attribute [LegacyNullToEmptyString] UTF8String boxDecorationBreak;
  [BindingTemplate=(CSS2Property, eCSSProperty_box_sizing), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="box-sizing", BindingAlias="WebkitBoxSizing", BindingAlias="-webkit-box-sizing", BindingAlias="webkitBoxSizing"] attribute [LegacyNullToEmptyString] UTF8String boxSizing;
  [BindingTemplate=(CSS2Property, eCSSProperty_break_inside), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="break-inside"] attribute [LegacyNullToEmptyString] UTF8String breakInside;
  [BindingTemplate=(CSS2Property, eCSSProperty_caption_side), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="caption-side"] attribute [LegacyNullToEmptyString] UTF8String captionSide;
  [BindingTemplate=(CSS2Property, eCSSProperty_clear), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String clear;
  [BindingTemplate=(CSS2Property, eCSSProperty_color_interpolation), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="color-interpolation"] attribute [LegacyNullToEmptyString] UTF8String colorInterpolation;
  [BindingTemplate=(CSS2Property, eCSSProperty_color_interpolation_filters), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="color-interpolation-filters"] attribute [LegacyNullToEmptyString] UTF8String colorInterpolationFilters;
  [BindingTemplate=(CSS2Property, eCSSProperty_column_count), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="column-count"] attribute [LegacyNullToEmptyString] UTF8String columnCount;
  [BindingTemplate=(CSS2Property, eCSSProperty_column_fill), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="column-fill"] attribute [LegacyNullToEmptyString] UTF8String columnFill;
  [BindingTemplate=(CSS2Property, eCSSProperty_column_span), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="column-span"] attribute [LegacyNullToEmptyString] UTF8String columnSpan;
  [BindingTemplate=(CSS2Property, eCSSProperty_contain), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String contain;
  [BindingTemplate=(CSS2Property, eCSSProperty_container_type), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="container-type"] attribute [LegacyNullToEmptyString] UTF8String containerType;
  [BindingTemplate=(CSS2Property, eCSSProperty_content_visibility), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="content-visibility"] attribute [LegacyNullToEmptyString] UTF8String contentVisibility;
  [BindingTemplate=(CSS2Property, eCSSProperty_direction), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String direction;
  [BindingTemplate=(CSS2Property, eCSSProperty_display), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String display;
  [BindingTemplate=(CSS2Property, eCSSProperty_dominant_baseline), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="dominant-baseline"] attribute [LegacyNullToEmptyString] UTF8String dominantBaseline;
  [BindingTemplate=(CSS2Property, eCSSProperty_empty_cells), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="empty-cells"] attribute [LegacyNullToEmptyString] UTF8String emptyCells;
  [BindingTemplate=(CSS2Property, eCSSProperty_field_sizing), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.field-sizing.enabled", BindingAlias="field-sizing"] attribute [LegacyNullToEmptyString] UTF8String fieldSizing;
  [BindingTemplate=(CSS2Property, eCSSProperty_flex_direction), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="flex-direction", BindingAlias="WebkitFlexDirection", BindingAlias="-webkit-flex-direction", BindingAlias="webkitFlexDirection"] attribute [LegacyNullToEmptyString] UTF8String flexDirection;
  [BindingTemplate=(CSS2Property, eCSSProperty_flex_wrap), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="flex-wrap", BindingAlias="WebkitFlexWrap", BindingAlias="-webkit-flex-wrap", BindingAlias="webkitFlexWrap"] attribute [LegacyNullToEmptyString] UTF8String flexWrap;
  [BindingTemplate=(CSS2Property, eCSSProperty_float), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="float"] attribute [LegacyNullToEmptyString] UTF8String cssFloat;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_kerning), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="font-kerning"] attribute [LegacyNullToEmptyString] UTF8String fontKerning;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_language_override), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="font-language-override"] attribute [LegacyNullToEmptyString] UTF8String fontLanguageOverride;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_optical_sizing), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.font-variations.enabled", BindingAlias="font-optical-sizing"] attribute [LegacyNullToEmptyString] UTF8String fontOpticalSizing;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_size_adjust), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="font-size-adjust"] attribute [LegacyNullToEmptyString] UTF8String fontSizeAdjust;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_stretch), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="font-stretch"] attribute [LegacyNullToEmptyString] UTF8String fontStretch;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_style), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="font-style"] attribute [LegacyNullToEmptyString] UTF8String fontStyle;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_synthesis_style), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="font-synthesis-style"] attribute [LegacyNullToEmptyString] UTF8String fontSynthesisStyle;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_variant_caps), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="font-variant-caps"] attribute [LegacyNullToEmptyString] UTF8String fontVariantCaps;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_variant_east_asian), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="font-variant-east-asian"] attribute [LegacyNullToEmptyString] UTF8String fontVariantEastAsian;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_variant_emoji), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.font-variant-emoji.enabled", BindingAlias="font-variant-emoji"] attribute [LegacyNullToEmptyString] UTF8String fontVariantEmoji;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_variant_ligatures), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="font-variant-ligatures"] attribute [LegacyNullToEmptyString] UTF8String fontVariantLigatures;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_variant_numeric), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="font-variant-numeric"] attribute [LegacyNullToEmptyString] UTF8String fontVariantNumeric;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_variant_position), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="font-variant-position"] attribute [LegacyNullToEmptyString] UTF8String fontVariantPosition;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_weight), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="font-weight"] attribute [LegacyNullToEmptyString] UTF8String fontWeight;
  [BindingTemplate=(CSS2Property, eCSSProperty_forced_color_adjust), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="forced-color-adjust"] attribute [LegacyNullToEmptyString] UTF8String forcedColorAdjust;
  [BindingTemplate=(CSS2Property, eCSSProperty_grid_auto_flow), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="grid-auto-flow"] attribute [LegacyNullToEmptyString] UTF8String gridAutoFlow;
  [BindingTemplate=(CSS2Property, eCSSProperty_hyphens), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="-moz-hyphens", BindingAlias="MozHyphens"] attribute [LegacyNullToEmptyString] UTF8String hyphens;
  [BindingTemplate=(CSS2Property, eCSSProperty_image_orientation), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="image-orientation"] attribute [LegacyNullToEmptyString] UTF8String imageOrientation;
  [BindingTemplate=(CSS2Property, eCSSProperty_image_rendering), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="image-rendering"] attribute [LegacyNullToEmptyString] UTF8String imageRendering;
  [BindingTemplate=(CSS2Property, eCSSProperty_ime_mode), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="ime-mode"] attribute [LegacyNullToEmptyString] UTF8String imeMode;
  [BindingTemplate=(CSS2Property, eCSSProperty_initial_letter), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.initial-letter.enabled", BindingAlias="initial-letter"] attribute [LegacyNullToEmptyString] UTF8String initialLetter;
  [BindingTemplate=(CSS2Property, eCSSProperty_isolation), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String isolation;
  [BindingTemplate=(CSS2Property, eCSSProperty_justify_content), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="justify-content", BindingAlias="WebkitJustifyContent", BindingAlias="-webkit-justify-content", BindingAlias="webkitJustifyContent"] attribute [LegacyNullToEmptyString] UTF8String justifyContent;
  [BindingTemplate=(CSS2Property, eCSSProperty_justify_items), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="justify-items"] attribute [LegacyNullToEmptyString] UTF8String justifyItems;
  [BindingTemplate=(CSS2Property, eCSSProperty_justify_self), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="justify-self"] attribute [LegacyNullToEmptyString] UTF8String justifySelf;
  [BindingTemplate=(CSS2Property, eCSSProperty_line_break), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="line-break"] attribute [LegacyNullToEmptyString] UTF8String lineBreak;
  [BindingTemplate=(CSS2Property, eCSSProperty_list_style_position), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="list-style-position"] attribute [LegacyNullToEmptyString] UTF8String listStylePosition;
  [BindingTemplate=(CSS2Property, eCSSProperty_mask_type), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="mask-type"] attribute [LegacyNullToEmptyString] UTF8String maskType;
  [BindingTemplate=(CSS2Property, eCSSProperty_masonry_auto_flow), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.grid-template-masonry-value.enabled", BindingAlias="masonry-auto-flow"] attribute [LegacyNullToEmptyString] UTF8String masonryAutoFlow;
  [BindingTemplate=(CSS2Property, eCSSProperty_math_depth), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="math-depth"] attribute [LegacyNullToEmptyString] UTF8String mathDepth;
  [BindingTemplate=(CSS2Property, eCSSProperty_math_style), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="math-style"] attribute [LegacyNullToEmptyString] UTF8String mathStyle;
  [BindingTemplate=(CSS2Property, eCSSProperty_mix_blend_mode), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="mix-blend-mode"] attribute [LegacyNullToEmptyString] UTF8String mixBlendMode;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_box_align), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="-moz-box-align", BindingAlias="WebkitBoxAlign", BindingAlias="-webkit-box-align", BindingAlias="webkitBoxAlign"] attribute [LegacyNullToEmptyString] UTF8String MozBoxAlign;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_box_collapse), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, ChromeOnly, BindingAlias="-moz-box-collapse"] attribute [LegacyNullToEmptyString] UTF8String MozBoxCollapse;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_box_direction), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="-moz-box-direction", BindingAlias="WebkitBoxDirection", BindingAlias="-webkit-box-direction", BindingAlias="webkitBoxDirection"] attribute [LegacyNullToEmptyString] UTF8String MozBoxDirection;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_box_orient), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="-moz-box-orient", BindingAlias="WebkitBoxOrient", BindingAlias="-webkit-box-orient", BindingAlias="webkitBoxOrient"] attribute [LegacyNullToEmptyString] UTF8String MozBoxOrient;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_box_pack), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="-moz-box-pack", BindingAlias="WebkitBoxPack", BindingAlias="-webkit-box-pack", BindingAlias="webkitBoxPack"] attribute [LegacyNullToEmptyString] UTF8String MozBoxPack;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_control_character_visibility), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.moz-control-character-visibility.enabled", BindingAlias="-moz-control-character-visibility"] attribute [LegacyNullToEmptyString] UTF8String MozControlCharacterVisibility;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_float_edge), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="-moz-float-edge"] attribute [LegacyNullToEmptyString] UTF8String MozFloatEdge;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_orient), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="-moz-orient"] attribute [LegacyNullToEmptyString] UTF8String MozOrient;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_osx_font_smoothing), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.osx-font-smoothing.enabled", BindingAlias="-moz-osx-font-smoothing", BindingAlias="WebkitFontSmoothing", BindingAlias="-webkit-font-smoothing", BindingAlias="webkitFontSmoothing"] attribute [LegacyNullToEmptyString] UTF8String MozOsxFontSmoothing;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_text_size_adjust), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="-moz-text-size-adjust", BindingAlias="WebkitTextSizeAdjust", BindingAlias="-webkit-text-size-adjust", BindingAlias="webkitTextSizeAdjust"] attribute [LegacyNullToEmptyString] UTF8String MozTextSizeAdjust;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_theme), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, ChromeOnly, BindingAlias="-moz-theme"] attribute [LegacyNullToEmptyString] UTF8String MozTheme;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_user_focus), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, ChromeOnly, BindingAlias="-moz-user-focus"] attribute [LegacyNullToEmptyString] UTF8String MozUserFocus;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_user_input), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.moz-user-input.enabled", BindingAlias="-moz-user-input"] attribute [LegacyNullToEmptyString] UTF8String MozUserInput;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_window_dragging), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, ChromeOnly, BindingAlias="-moz-window-dragging"] attribute [LegacyNullToEmptyString] UTF8String MozWindowDragging;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_window_shadow), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, ChromeOnly, BindingAlias="-moz-window-shadow"] attribute [LegacyNullToEmptyString] UTF8String MozWindowShadow;
  [BindingTemplate=(CSS2Property, eCSSProperty_object_fit), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="object-fit"] attribute [LegacyNullToEmptyString] UTF8String objectFit;
  [BindingTemplate=(CSS2Property, eCSSProperty_offset_rotate), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="offset-rotate"] attribute [LegacyNullToEmptyString] UTF8String offsetRotate;
  [BindingTemplate=(CSS2Property, eCSSProperty_outline_style), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="outline-style"] attribute [LegacyNullToEmptyString] UTF8String outlineStyle;
  [BindingTemplate=(CSS2Property, eCSSProperty_overflow_anchor), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.scroll-anchoring.enabled", BindingAlias="overflow-anchor"] attribute [LegacyNullToEmptyString] UTF8String overflowAnchor;
  [BindingTemplate=(CSS2Property, eCSSProperty_overflow_wrap), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="overflow-wrap", BindingAlias="word-wrap", BindingAlias="wordWrap"] attribute [LegacyNullToEmptyString] UTF8String overflowWrap;
  [BindingTemplate=(CSS2Property, eCSSProperty_paint_order), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="paint-order"] attribute [LegacyNullToEmptyString] UTF8String paintOrder;
  [BindingTemplate=(CSS2Property, eCSSProperty_pointer_events), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="pointer-events"] attribute [LegacyNullToEmptyString] UTF8String pointerEvents;
  [BindingTemplate=(CSS2Property, eCSSProperty_position), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String position;
  [BindingTemplate=(CSS2Property, eCSSProperty_position_area), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.anchor-positioning.enabled", BindingAlias="position-area"] attribute [LegacyNullToEmptyString] UTF8String positionArea;
  [BindingTemplate=(CSS2Property, eCSSProperty_position_try_order), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.anchor-positioning.enabled", BindingAlias="position-try-order"] attribute [LegacyNullToEmptyString] UTF8String positionTryOrder;
  [BindingTemplate=(CSS2Property, eCSSProperty_position_visibility), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.anchor-positioning.enabled", BindingAlias="position-visibility"] attribute [LegacyNullToEmptyString] UTF8String positionVisibility;
  [BindingTemplate=(CSS2Property, eCSSProperty_print_color_adjust), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="print-color-adjust", BindingAlias="color-adjust", BindingAlias="colorAdjust"] attribute [LegacyNullToEmptyString] UTF8String printColorAdjust;
  [BindingTemplate=(CSS2Property, eCSSProperty_resize), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String resize;
  [BindingTemplate=(CSS2Property, eCSSProperty_ruby_align), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="ruby-align"] attribute [LegacyNullToEmptyString] UTF8String rubyAlign;
  [BindingTemplate=(CSS2Property, eCSSProperty_ruby_position), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="ruby-position"] attribute [LegacyNullToEmptyString] UTF8String rubyPosition;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_behavior), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-behavior"] attribute [LegacyNullToEmptyString] UTF8String scrollBehavior;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_snap_align), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-snap-align"] attribute [LegacyNullToEmptyString] UTF8String scrollSnapAlign;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_snap_stop), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-snap-stop"] attribute [LegacyNullToEmptyString] UTF8String scrollSnapStop;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_snap_type), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-snap-type"] attribute [LegacyNullToEmptyString] UTF8String scrollSnapType;
  [BindingTemplate=(CSS2Property, eCSSProperty_scrollbar_gutter), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scrollbar-gutter"] attribute [LegacyNullToEmptyString] UTF8String scrollbarGutter;
  [BindingTemplate=(CSS2Property, eCSSProperty_scrollbar_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scrollbar-width"] attribute [LegacyNullToEmptyString] UTF8String scrollbarWidth;
  [BindingTemplate=(CSS2Property, eCSSProperty_shape_rendering), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="shape-rendering"] attribute [LegacyNullToEmptyString] UTF8String shapeRendering;
  [BindingTemplate=(CSS2Property, eCSSProperty_stroke_linecap), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="stroke-linecap"] attribute [LegacyNullToEmptyString] UTF8String strokeLinecap;
  [BindingTemplate=(CSS2Property, eCSSProperty_stroke_linejoin), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="stroke-linejoin"] attribute [LegacyNullToEmptyString] UTF8String strokeLinejoin;
  [BindingTemplate=(CSS2Property, eCSSProperty_table_layout), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="table-layout"] attribute [LegacyNullToEmptyString] UTF8String tableLayout;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_align), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-align"] attribute [LegacyNullToEmptyString] UTF8String textAlign;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_align_last), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-align-last"] attribute [LegacyNullToEmptyString] UTF8String textAlignLast;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_anchor), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-anchor"] attribute [LegacyNullToEmptyString] UTF8String textAnchor;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_combine_upright), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-combine-upright"] attribute [LegacyNullToEmptyString] UTF8String textCombineUpright;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_decoration_line), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-decoration-line"] attribute [LegacyNullToEmptyString] UTF8String textDecorationLine;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_decoration_skip_ink), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-decoration-skip-ink"] attribute [LegacyNullToEmptyString] UTF8String textDecorationSkipInk;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_decoration_style), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-decoration-style"] attribute [LegacyNullToEmptyString] UTF8String textDecorationStyle;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_emphasis_position), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-emphasis-position"] attribute [LegacyNullToEmptyString] UTF8String textEmphasisPosition;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_justify), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-justify"] attribute [LegacyNullToEmptyString] UTF8String textJustify;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_orientation), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-orientation"] attribute [LegacyNullToEmptyString] UTF8String textOrientation;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_rendering), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-rendering"] attribute [LegacyNullToEmptyString] UTF8String textRendering;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_transform), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-transform"] attribute [LegacyNullToEmptyString] UTF8String textTransform;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_underline_position), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-underline-position"] attribute [LegacyNullToEmptyString] UTF8String textUnderlinePosition;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_wrap_mode), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-wrap-mode"] attribute [LegacyNullToEmptyString] UTF8String textWrapMode;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_wrap_style), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-wrap-style"] attribute [LegacyNullToEmptyString] UTF8String textWrapStyle;
  [BindingTemplate=(CSS2Property, eCSSProperty_touch_action), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="touch-action"] attribute [LegacyNullToEmptyString] UTF8String touchAction;
  [BindingTemplate=(CSS2Property, eCSSProperty_transform_box), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="transform-box"] attribute [LegacyNullToEmptyString] UTF8String transformBox;
  [BindingTemplate=(CSS2Property, eCSSProperty_transform_style), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="transform-style", BindingAlias="WebkitTransformStyle", BindingAlias="-webkit-transform-style", BindingAlias="webkitTransformStyle"] attribute [LegacyNullToEmptyString] UTF8String transformStyle;
  [BindingTemplate=(CSS2Property, eCSSProperty_unicode_bidi), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="unicode-bidi"] attribute [LegacyNullToEmptyString] UTF8String unicodeBidi;
  [BindingTemplate=(CSS2Property, eCSSProperty_user_select), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="user-select", BindingAlias="-moz-user-select", BindingAlias="MozUserSelect", BindingAlias="WebkitUserSelect", BindingAlias="-webkit-user-select", BindingAlias="webkitUserSelect"] attribute [LegacyNullToEmptyString] UTF8String userSelect;
  [BindingTemplate=(CSS2Property, eCSSProperty_vector_effect), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="vector-effect"] attribute [LegacyNullToEmptyString] UTF8String vectorEffect;
  [BindingTemplate=(CSS2Property, eCSSProperty_visibility), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String visibility;
  [BindingTemplate=(CSS2Property, eCSSProperty__webkit_line_clamp), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="WebkitLineClamp", BindingAlias="-webkit-line-clamp"] attribute [LegacyNullToEmptyString] UTF8String webkitLineClamp;
  [BindingTemplate=(CSS2Property, eCSSProperty__webkit_text_security), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="WebkitTextSecurity", BindingAlias="-webkit-text-security"] attribute [LegacyNullToEmptyString] UTF8String webkitTextSecurity;
  [BindingTemplate=(CSS2Property, eCSSProperty_white_space_collapse), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="white-space-collapse"] attribute [LegacyNullToEmptyString] UTF8String whiteSpaceCollapse;
  [BindingTemplate=(CSS2Property, eCSSProperty_word_break), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="word-break"] attribute [LegacyNullToEmptyString] UTF8String wordBreak;
  [BindingTemplate=(CSS2Property, eCSSProperty_writing_mode), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="writing-mode"] attribute [LegacyNullToEmptyString] UTF8String writingMode;
  [BindingTemplate=(CSS2Property, eCSSProperty_z_index), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="z-index"] attribute [LegacyNullToEmptyString] UTF8String zIndex;
  [BindingTemplate=(CSS2Property, eCSSProperty_zoom), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.zoom.enabled"] attribute [LegacyNullToEmptyString] UTF8String zoom;
  [BindingTemplate=(CSS2Property, eCSSProperty_appearance), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="WebkitAppearance", BindingAlias="-webkit-appearance", BindingAlias="webkitAppearance"] attribute [LegacyNullToEmptyString] UTF8String appearance;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_default_appearance), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, ChromeOnly, BindingAlias="-moz-default-appearance"] attribute [LegacyNullToEmptyString] UTF8String MozDefaultAppearance;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_force_broken_image_icon), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="-moz-force-broken-image-icon"] attribute [LegacyNullToEmptyString] UTF8String MozForceBrokenImageIcon;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_subtree_hidden_only_visually), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, ChromeOnly, BindingAlias="-moz-subtree-hidden-only-visually"] attribute [LegacyNullToEmptyString] UTF8String MozSubtreeHiddenOnlyVisually;
  [BindingTemplate=(CSS2Property, eCSSProperty_break_after), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="break-after"] attribute [LegacyNullToEmptyString] UTF8String breakAfter;
  [BindingTemplate=(CSS2Property, eCSSProperty_break_before), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="break-before"] attribute [LegacyNullToEmptyString] UTF8String breakBefore;
  [BindingTemplate=(CSS2Property, eCSSProperty_clip_rule), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="clip-rule"] attribute [LegacyNullToEmptyString] UTF8String clipRule;
  [BindingTemplate=(CSS2Property, eCSSProperty_fill_rule), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="fill-rule"] attribute [LegacyNullToEmptyString] UTF8String fillRule;
  [BindingTemplate=(CSS2Property, eCSSProperty_overflow_clip_box_block), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.overflow-clip-box.enabled", BindingAlias="overflow-clip-box-block"] attribute [LegacyNullToEmptyString] UTF8String overflowClipBoxBlock;
  [BindingTemplate=(CSS2Property, eCSSProperty_overflow_clip_box_inline), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.overflow-clip-box.enabled", BindingAlias="overflow-clip-box-inline"] attribute [LegacyNullToEmptyString] UTF8String overflowClipBoxInline;
  [BindingTemplate=(CSS2Property, eCSSProperty_fill_opacity), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="fill-opacity"] attribute [LegacyNullToEmptyString] UTF8String fillOpacity;
  [BindingTemplate=(CSS2Property, eCSSProperty_stroke_opacity), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="stroke-opacity"] attribute [LegacyNullToEmptyString] UTF8String strokeOpacity;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_synthesis_position), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="font-synthesis-position"] attribute [LegacyNullToEmptyString] UTF8String fontSynthesisPosition;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_synthesis_small_caps), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="font-synthesis-small-caps"] attribute [LegacyNullToEmptyString] UTF8String fontSynthesisSmallCaps;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_synthesis_weight), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="font-synthesis-weight"] attribute [LegacyNullToEmptyString] UTF8String fontSynthesisWeight;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_box_ordinal_group), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="-moz-box-ordinal-group", BindingAlias="WebkitBoxOrdinalGroup", BindingAlias="-webkit-box-ordinal-group", BindingAlias="webkitBoxOrdinalGroup"] attribute [LegacyNullToEmptyString] UTF8String MozBoxOrdinalGroup;
  [BindingTemplate=(CSS2Property, eCSSProperty_order), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="WebkitOrder", BindingAlias="-webkit-order", BindingAlias="webkitOrder"] attribute [LegacyNullToEmptyString] UTF8String order;
  [BindingTemplate=(CSS2Property, eCSSProperty_flex_grow), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="flex-grow", BindingAlias="WebkitFlexGrow", BindingAlias="-webkit-flex-grow", BindingAlias="webkitFlexGrow"] attribute [LegacyNullToEmptyString] UTF8String flexGrow;
  [BindingTemplate=(CSS2Property, eCSSProperty_flex_shrink), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="flex-shrink", BindingAlias="WebkitFlexShrink", BindingAlias="-webkit-flex-shrink", BindingAlias="webkitFlexShrink"] attribute [LegacyNullToEmptyString] UTF8String flexShrink;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_box_flex), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="-moz-box-flex", BindingAlias="WebkitBoxFlex", BindingAlias="-webkit-box-flex", BindingAlias="webkitBoxFlex"] attribute [LegacyNullToEmptyString] UTF8String MozBoxFlex;
  [BindingTemplate=(CSS2Property, eCSSProperty_stroke_miterlimit), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="stroke-miterlimit"] attribute [LegacyNullToEmptyString] UTF8String strokeMiterlimit;
  [BindingTemplate=(CSS2Property, eCSSProperty_overflow_block), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="overflow-block"] attribute [LegacyNullToEmptyString] UTF8String overflowBlock;
  [BindingTemplate=(CSS2Property, eCSSProperty_overflow_inline), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="overflow-inline"] attribute [LegacyNullToEmptyString] UTF8String overflowInline;
  [BindingTemplate=(CSS2Property, eCSSProperty_overflow_x), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="overflow-x"] attribute [LegacyNullToEmptyString] UTF8String overflowX;
  [BindingTemplate=(CSS2Property, eCSSProperty_overflow_y), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="overflow-y"] attribute [LegacyNullToEmptyString] UTF8String overflowY;
  [BindingTemplate=(CSS2Property, eCSSProperty_overscroll_behavior_block), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="overscroll-behavior-block"] attribute [LegacyNullToEmptyString] UTF8String overscrollBehaviorBlock;
  [BindingTemplate=(CSS2Property, eCSSProperty_overscroll_behavior_inline), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="overscroll-behavior-inline"] attribute [LegacyNullToEmptyString] UTF8String overscrollBehaviorInline;
  [BindingTemplate=(CSS2Property, eCSSProperty_overscroll_behavior_x), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="overscroll-behavior-x"] attribute [LegacyNullToEmptyString] UTF8String overscrollBehaviorX;
  [BindingTemplate=(CSS2Property, eCSSProperty_overscroll_behavior_y), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="overscroll-behavior-y"] attribute [LegacyNullToEmptyString] UTF8String overscrollBehaviorY;
  [BindingTemplate=(CSS2Property, eCSSProperty_flood_opacity), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="flood-opacity"] attribute [LegacyNullToEmptyString] UTF8String floodOpacity;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_window_opacity), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, ChromeOnly, BindingAlias="-moz-window-opacity"] attribute [LegacyNullToEmptyString] UTF8String MozWindowOpacity;
  [BindingTemplate=(CSS2Property, eCSSProperty_opacity), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String opacity;
  [BindingTemplate=(CSS2Property, eCSSProperty_shape_image_threshold), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="shape-image-threshold"] attribute [LegacyNullToEmptyString] UTF8String shapeImageThreshold;
  [BindingTemplate=(CSS2Property, eCSSProperty_stop_opacity), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="stop-opacity"] attribute [LegacyNullToEmptyString] UTF8String stopOpacity;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_block_end_style), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-block-end-style"] attribute [LegacyNullToEmptyString] UTF8String borderBlockEndStyle;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_block_start_style), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-block-start-style"] attribute [LegacyNullToEmptyString] UTF8String borderBlockStartStyle;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_bottom_style), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-bottom-style"] attribute [LegacyNullToEmptyString] UTF8String borderBottomStyle;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_inline_end_style), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-inline-end-style", BindingAlias="-moz-border-end-style", BindingAlias="MozBorderEndStyle"] attribute [LegacyNullToEmptyString] UTF8String borderInlineEndStyle;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_inline_start_style), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-inline-start-style", BindingAlias="-moz-border-start-style", BindingAlias="MozBorderStartStyle"] attribute [LegacyNullToEmptyString] UTF8String borderInlineStartStyle;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_left_style), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-left-style"] attribute [LegacyNullToEmptyString] UTF8String borderLeftStyle;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_right_style), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-right-style"] attribute [LegacyNullToEmptyString] UTF8String borderRightStyle;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_top_style), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-top-style"] attribute [LegacyNullToEmptyString] UTF8String borderTopStyle;
  [BindingTemplate=(CSS2Property, eCSSProperty_column_rule_style), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="column-rule-style"] attribute [LegacyNullToEmptyString] UTF8String columnRuleStyle;
  [BindingTemplate=(CSS2Property, eCSSProperty_accent_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="accent-color"] attribute [LegacyNullToEmptyString] UTF8String accentColor;
  [BindingTemplate=(CSS2Property, eCSSProperty_anchor_name), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.anchor-positioning.enabled", BindingAlias="anchor-name"] attribute [LegacyNullToEmptyString] UTF8String anchorName;
  [BindingTemplate=(CSS2Property, eCSSProperty_anchor_scope), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.anchor-positioning.enabled", BindingAlias="anchor-scope"] attribute [LegacyNullToEmptyString] UTF8String anchorScope;
  [BindingTemplate=(CSS2Property, eCSSProperty_animation_composition), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="animation-composition"] attribute [LegacyNullToEmptyString] UTF8String animationComposition;
  [BindingTemplate=(CSS2Property, eCSSProperty_animation_delay), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="animation-delay", BindingAlias="WebkitAnimationDelay", BindingAlias="-webkit-animation-delay", BindingAlias="webkitAnimationDelay"] attribute [LegacyNullToEmptyString] UTF8String animationDelay;
  [BindingTemplate=(CSS2Property, eCSSProperty_animation_direction), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="animation-direction", BindingAlias="WebkitAnimationDirection", BindingAlias="-webkit-animation-direction", BindingAlias="webkitAnimationDirection"] attribute [LegacyNullToEmptyString] UTF8String animationDirection;
  [BindingTemplate=(CSS2Property, eCSSProperty_animation_duration), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="animation-duration", BindingAlias="WebkitAnimationDuration", BindingAlias="-webkit-animation-duration", BindingAlias="webkitAnimationDuration"] attribute [LegacyNullToEmptyString] UTF8String animationDuration;
  [BindingTemplate=(CSS2Property, eCSSProperty_animation_fill_mode), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="animation-fill-mode", BindingAlias="WebkitAnimationFillMode", BindingAlias="-webkit-animation-fill-mode", BindingAlias="webkitAnimationFillMode"] attribute [LegacyNullToEmptyString] UTF8String animationFillMode;
  [BindingTemplate=(CSS2Property, eCSSProperty_animation_iteration_count), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="animation-iteration-count", BindingAlias="WebkitAnimationIterationCount", BindingAlias="-webkit-animation-iteration-count", BindingAlias="webkitAnimationIterationCount"] attribute [LegacyNullToEmptyString] UTF8String animationIterationCount;
  [BindingTemplate=(CSS2Property, eCSSProperty_animation_name), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="animation-name", BindingAlias="WebkitAnimationName", BindingAlias="-webkit-animation-name", BindingAlias="webkitAnimationName"] attribute [LegacyNullToEmptyString] UTF8String animationName;
  [BindingTemplate=(CSS2Property, eCSSProperty_animation_play_state), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="animation-play-state", BindingAlias="WebkitAnimationPlayState", BindingAlias="-webkit-animation-play-state", BindingAlias="webkitAnimationPlayState"] attribute [LegacyNullToEmptyString] UTF8String animationPlayState;
  [BindingTemplate=(CSS2Property, eCSSProperty_animation_timeline), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.scroll-driven-animations.enabled", BindingAlias="animation-timeline"] attribute [LegacyNullToEmptyString] UTF8String animationTimeline;
  [BindingTemplate=(CSS2Property, eCSSProperty_animation_timing_function), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="animation-timing-function", BindingAlias="WebkitAnimationTimingFunction", BindingAlias="-webkit-animation-timing-function", BindingAlias="webkitAnimationTimingFunction"] attribute [LegacyNullToEmptyString] UTF8String animationTimingFunction;
  [BindingTemplate=(CSS2Property, eCSSProperty_backdrop_filter), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Func="nsCSSProps::IsBackdropFilterAvailable", BindingAlias="backdrop-filter"] attribute [LegacyNullToEmptyString] UTF8String backdropFilter;
  [BindingTemplate=(CSS2Property, eCSSProperty_background_attachment), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="background-attachment"] attribute [LegacyNullToEmptyString] UTF8String backgroundAttachment;
  [BindingTemplate=(CSS2Property, eCSSProperty_background_blend_mode), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="background-blend-mode"] attribute [LegacyNullToEmptyString] UTF8String backgroundBlendMode;
  [BindingTemplate=(CSS2Property, eCSSProperty_background_clip), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="background-clip", BindingAlias="WebkitBackgroundClip", BindingAlias="-webkit-background-clip", BindingAlias="webkitBackgroundClip"] attribute [LegacyNullToEmptyString] UTF8String backgroundClip;
  [BindingTemplate=(CSS2Property, eCSSProperty_background_image), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="background-image"] attribute [LegacyNullToEmptyString] UTF8String backgroundImage;
  [BindingTemplate=(CSS2Property, eCSSProperty_background_origin), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="background-origin", BindingAlias="WebkitBackgroundOrigin", BindingAlias="-webkit-background-origin", BindingAlias="webkitBackgroundOrigin"] attribute [LegacyNullToEmptyString] UTF8String backgroundOrigin;
  [BindingTemplate=(CSS2Property, eCSSProperty_background_position_x), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="background-position-x"] attribute [LegacyNullToEmptyString] UTF8String backgroundPositionX;
  [BindingTemplate=(CSS2Property, eCSSProperty_background_position_y), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="background-position-y"] attribute [LegacyNullToEmptyString] UTF8String backgroundPositionY;
  [BindingTemplate=(CSS2Property, eCSSProperty_background_repeat), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="background-repeat"] attribute [LegacyNullToEmptyString] UTF8String backgroundRepeat;
  [BindingTemplate=(CSS2Property, eCSSProperty_background_size), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="background-size", BindingAlias="WebkitBackgroundSize", BindingAlias="-webkit-background-size", BindingAlias="webkitBackgroundSize"] attribute [LegacyNullToEmptyString] UTF8String backgroundSize;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_image_outset), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-image-outset"] attribute [LegacyNullToEmptyString] UTF8String borderImageOutset;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_image_slice), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-image-slice"] attribute [LegacyNullToEmptyString] UTF8String borderImageSlice;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_image_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-image-width"] attribute [LegacyNullToEmptyString] UTF8String borderImageWidth;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_spacing), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-spacing"] attribute [LegacyNullToEmptyString] UTF8String borderSpacing;
  [BindingTemplate=(CSS2Property, eCSSProperty_box_shadow), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="box-shadow", BindingAlias="WebkitBoxShadow", BindingAlias="-webkit-box-shadow", BindingAlias="webkitBoxShadow"] attribute [LegacyNullToEmptyString] UTF8String boxShadow;
  [BindingTemplate=(CSS2Property, eCSSProperty_caret_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="caret-color"] attribute [LegacyNullToEmptyString] UTF8String caretColor;
  [BindingTemplate=(CSS2Property, eCSSProperty_clip), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String clip;
  [BindingTemplate=(CSS2Property, eCSSProperty_clip_path), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="clip-path", BindingAlias="WebkitClipPath", BindingAlias="-webkit-clip-path", BindingAlias="webkitClipPath"] attribute [LegacyNullToEmptyString] UTF8String clipPath;
  [BindingTemplate=(CSS2Property, eCSSProperty_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String color;
  [BindingTemplate=(CSS2Property, eCSSProperty_color_scheme), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="color-scheme"] attribute [LegacyNullToEmptyString] UTF8String colorScheme;
  [BindingTemplate=(CSS2Property, eCSSProperty_column_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="column-width"] attribute [LegacyNullToEmptyString] UTF8String columnWidth;
  [BindingTemplate=(CSS2Property, eCSSProperty_container_name), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="container-name"] attribute [LegacyNullToEmptyString] UTF8String containerName;
  [BindingTemplate=(CSS2Property, eCSSProperty_content), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String content;
  [BindingTemplate=(CSS2Property, eCSSProperty_counter_increment), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="counter-increment"] attribute [LegacyNullToEmptyString] UTF8String counterIncrement;
  [BindingTemplate=(CSS2Property, eCSSProperty_counter_reset), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="counter-reset"] attribute [LegacyNullToEmptyString] UTF8String counterReset;
  [BindingTemplate=(CSS2Property, eCSSProperty_counter_set), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="counter-set"] attribute [LegacyNullToEmptyString] UTF8String counterSet;
  [BindingTemplate=(CSS2Property, eCSSProperty_cursor), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String cursor;
  [BindingTemplate=(CSS2Property, eCSSProperty_d), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String d;
  [BindingTemplate=(CSS2Property, eCSSProperty_filter), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="WebkitFilter", BindingAlias="-webkit-filter", BindingAlias="webkitFilter"] attribute [LegacyNullToEmptyString] UTF8String filter;
  [BindingTemplate=(CSS2Property, eCSSProperty_flex_basis), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="flex-basis", BindingAlias="WebkitFlexBasis", BindingAlias="-webkit-flex-basis", BindingAlias="webkitFlexBasis"] attribute [LegacyNullToEmptyString] UTF8String flexBasis;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_family), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="font-family"] attribute [LegacyNullToEmptyString] UTF8String fontFamily;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_feature_settings), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="font-feature-settings", BindingAlias="WebkitFontFeatureSettings", BindingAlias="-webkit-font-feature-settings", BindingAlias="webkitFontFeatureSettings"] attribute [LegacyNullToEmptyString] UTF8String fontFeatureSettings;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_palette), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.font-palette.enabled", BindingAlias="font-palette"] attribute [LegacyNullToEmptyString] UTF8String fontPalette;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_size), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="font-size"] attribute [LegacyNullToEmptyString] UTF8String fontSize;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_variant_alternates), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="font-variant-alternates"] attribute [LegacyNullToEmptyString] UTF8String fontVariantAlternates;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_variation_settings), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.font-variations.enabled", BindingAlias="font-variation-settings"] attribute [LegacyNullToEmptyString] UTF8String fontVariationSettings;
  [BindingTemplate=(CSS2Property, eCSSProperty_grid_template_areas), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="grid-template-areas"] attribute [LegacyNullToEmptyString] UTF8String gridTemplateAreas;
  [BindingTemplate=(CSS2Property, eCSSProperty_hyphenate_character), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="hyphenate-character"] attribute [LegacyNullToEmptyString] UTF8String hyphenateCharacter;
  [BindingTemplate=(CSS2Property, eCSSProperty_hyphenate_limit_chars), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="hyphenate-limit-chars"] attribute [LegacyNullToEmptyString] UTF8String hyphenateLimitChars;
  [BindingTemplate=(CSS2Property, eCSSProperty_letter_spacing), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="letter-spacing"] attribute [LegacyNullToEmptyString] UTF8String letterSpacing;
  [BindingTemplate=(CSS2Property, eCSSProperty_line_height), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="line-height"] attribute [LegacyNullToEmptyString] UTF8String lineHeight;
  [BindingTemplate=(CSS2Property, eCSSProperty_list_style_type), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="list-style-type"] attribute [LegacyNullToEmptyString] UTF8String listStyleType;
  [BindingTemplate=(CSS2Property, eCSSProperty_mask_clip), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="mask-clip", BindingAlias="WebkitMaskClip", BindingAlias="-webkit-mask-clip", BindingAlias="webkitMaskClip"] attribute [LegacyNullToEmptyString] UTF8String maskClip;
  [BindingTemplate=(CSS2Property, eCSSProperty_mask_composite), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="mask-composite", BindingAlias="WebkitMaskComposite", BindingAlias="-webkit-mask-composite", BindingAlias="webkitMaskComposite"] attribute [LegacyNullToEmptyString] UTF8String maskComposite;
  [BindingTemplate=(CSS2Property, eCSSProperty_mask_image), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="mask-image", BindingAlias="WebkitMaskImage", BindingAlias="-webkit-mask-image", BindingAlias="webkitMaskImage"] attribute [LegacyNullToEmptyString] UTF8String maskImage;
  [BindingTemplate=(CSS2Property, eCSSProperty_mask_mode), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="mask-mode"] attribute [LegacyNullToEmptyString] UTF8String maskMode;
  [BindingTemplate=(CSS2Property, eCSSProperty_mask_origin), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="mask-origin", BindingAlias="WebkitMaskOrigin", BindingAlias="-webkit-mask-origin", BindingAlias="webkitMaskOrigin"] attribute [LegacyNullToEmptyString] UTF8String maskOrigin;
  [BindingTemplate=(CSS2Property, eCSSProperty_mask_position_x), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="mask-position-x", BindingAlias="WebkitMaskPositionX", BindingAlias="-webkit-mask-position-x", BindingAlias="webkitMaskPositionX"] attribute [LegacyNullToEmptyString] UTF8String maskPositionX;
  [BindingTemplate=(CSS2Property, eCSSProperty_mask_position_y), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="mask-position-y", BindingAlias="WebkitMaskPositionY", BindingAlias="-webkit-mask-position-y", BindingAlias="webkitMaskPositionY"] attribute [LegacyNullToEmptyString] UTF8String maskPositionY;
  [BindingTemplate=(CSS2Property, eCSSProperty_mask_repeat), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="mask-repeat", BindingAlias="WebkitMaskRepeat", BindingAlias="-webkit-mask-repeat", BindingAlias="webkitMaskRepeat"] attribute [LegacyNullToEmptyString] UTF8String maskRepeat;
  [BindingTemplate=(CSS2Property, eCSSProperty_mask_size), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="mask-size", BindingAlias="WebkitMaskSize", BindingAlias="-webkit-mask-size", BindingAlias="webkitMaskSize"] attribute [LegacyNullToEmptyString] UTF8String maskSize;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_context_properties), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="svg.context-properties.content.enabled", BindingAlias="-moz-context-properties"] attribute [LegacyNullToEmptyString] UTF8String MozContextProperties;
  [BindingTemplate=(CSS2Property, eCSSProperty_offset_anchor), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="offset-anchor"] attribute [LegacyNullToEmptyString] UTF8String offsetAnchor;
  [BindingTemplate=(CSS2Property, eCSSProperty_offset_path), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="offset-path"] attribute [LegacyNullToEmptyString] UTF8String offsetPath;
  [BindingTemplate=(CSS2Property, eCSSProperty_offset_position), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="offset-position"] attribute [LegacyNullToEmptyString] UTF8String offsetPosition;
  [BindingTemplate=(CSS2Property, eCSSProperty_page), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String page;
  [BindingTemplate=(CSS2Property, eCSSProperty_perspective), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="WebkitPerspective", BindingAlias="-webkit-perspective", BindingAlias="webkitPerspective"] attribute [LegacyNullToEmptyString] UTF8String perspective;
  [BindingTemplate=(CSS2Property, eCSSProperty_position_anchor), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.anchor-positioning.enabled", BindingAlias="position-anchor"] attribute [LegacyNullToEmptyString] UTF8String positionAnchor;
  [BindingTemplate=(CSS2Property, eCSSProperty_position_try_fallbacks), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.anchor-positioning.enabled", BindingAlias="position-try-fallbacks"] attribute [LegacyNullToEmptyString] UTF8String positionTryFallbacks;
  [BindingTemplate=(CSS2Property, eCSSProperty_quotes), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String quotes;
  [BindingTemplate=(CSS2Property, eCSSProperty_rotate), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String rotate;
  [BindingTemplate=(CSS2Property, eCSSProperty_scale), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String scale;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_timeline_axis), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.scroll-driven-animations.enabled", BindingAlias="scroll-timeline-axis"] attribute [LegacyNullToEmptyString] UTF8String scrollTimelineAxis;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_timeline_name), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.scroll-driven-animations.enabled", BindingAlias="scroll-timeline-name"] attribute [LegacyNullToEmptyString] UTF8String scrollTimelineName;
  [BindingTemplate=(CSS2Property, eCSSProperty_scrollbar_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scrollbar-color"] attribute [LegacyNullToEmptyString] UTF8String scrollbarColor;
  [BindingTemplate=(CSS2Property, eCSSProperty_shape_outside), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="shape-outside"] attribute [LegacyNullToEmptyString] UTF8String shapeOutside;
  [BindingTemplate=(CSS2Property, eCSSProperty_stroke_dasharray), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="stroke-dasharray"] attribute [LegacyNullToEmptyString] UTF8String strokeDasharray;
  [BindingTemplate=(CSS2Property, eCSSProperty_stroke_dashoffset), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="stroke-dashoffset"] attribute [LegacyNullToEmptyString] UTF8String strokeDashoffset;
  [BindingTemplate=(CSS2Property, eCSSProperty_stroke_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="stroke-width"] attribute [LegacyNullToEmptyString] UTF8String strokeWidth;
  [BindingTemplate=(CSS2Property, eCSSProperty_tab_size), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="tab-size", BindingAlias="-moz-tab-size", BindingAlias="MozTabSize"] attribute [LegacyNullToEmptyString] UTF8String tabSize;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_decoration_thickness), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-decoration-thickness"] attribute [LegacyNullToEmptyString] UTF8String textDecorationThickness;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_emphasis_style), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-emphasis-style"] attribute [LegacyNullToEmptyString] UTF8String textEmphasisStyle;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_indent), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-indent"] attribute [LegacyNullToEmptyString] UTF8String textIndent;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_overflow), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-overflow"] attribute [LegacyNullToEmptyString] UTF8String textOverflow;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_shadow), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-shadow"] attribute [LegacyNullToEmptyString] UTF8String textShadow;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_underline_offset), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-underline-offset"] attribute [LegacyNullToEmptyString] UTF8String textUnderlineOffset;
  [BindingTemplate=(CSS2Property, eCSSProperty_transform_origin), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="transform-origin", BindingAlias="WebkitTransformOrigin", BindingAlias="-webkit-transform-origin", BindingAlias="webkitTransformOrigin"] attribute [LegacyNullToEmptyString] UTF8String transformOrigin;
  [BindingTemplate=(CSS2Property, eCSSProperty_transition_behavior), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="transition-behavior"] attribute [LegacyNullToEmptyString] UTF8String transitionBehavior;
  [BindingTemplate=(CSS2Property, eCSSProperty_transition_delay), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="transition-delay", BindingAlias="WebkitTransitionDelay", BindingAlias="-webkit-transition-delay", BindingAlias="webkitTransitionDelay"] attribute [LegacyNullToEmptyString] UTF8String transitionDelay;
  [BindingTemplate=(CSS2Property, eCSSProperty_transition_duration), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="transition-duration", BindingAlias="WebkitTransitionDuration", BindingAlias="-webkit-transition-duration", BindingAlias="webkitTransitionDuration"] attribute [LegacyNullToEmptyString] UTF8String transitionDuration;
  [BindingTemplate=(CSS2Property, eCSSProperty_transition_property), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="transition-property", BindingAlias="WebkitTransitionProperty", BindingAlias="-webkit-transition-property", BindingAlias="webkitTransitionProperty"] attribute [LegacyNullToEmptyString] UTF8String transitionProperty;
  [BindingTemplate=(CSS2Property, eCSSProperty_transition_timing_function), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="transition-timing-function", BindingAlias="WebkitTransitionTimingFunction", BindingAlias="-webkit-transition-timing-function", BindingAlias="webkitTransitionTimingFunction"] attribute [LegacyNullToEmptyString] UTF8String transitionTimingFunction;
  [BindingTemplate=(CSS2Property, eCSSProperty_translate), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String translate;
  [BindingTemplate=(CSS2Property, eCSSProperty_vertical_align), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="vertical-align"] attribute [LegacyNullToEmptyString] UTF8String verticalAlign;
  [BindingTemplate=(CSS2Property, eCSSProperty_view_timeline_axis), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.scroll-driven-animations.enabled", BindingAlias="view-timeline-axis"] attribute [LegacyNullToEmptyString] UTF8String viewTimelineAxis;
  [BindingTemplate=(CSS2Property, eCSSProperty_view_timeline_inset), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.scroll-driven-animations.enabled", BindingAlias="view-timeline-inset"] attribute [LegacyNullToEmptyString] UTF8String viewTimelineInset;
  [BindingTemplate=(CSS2Property, eCSSProperty_view_timeline_name), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.scroll-driven-animations.enabled", BindingAlias="view-timeline-name"] attribute [LegacyNullToEmptyString] UTF8String viewTimelineName;
  [BindingTemplate=(CSS2Property, eCSSProperty_view_transition_class), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="dom.viewTransitions.enabled", BindingAlias="view-transition-class"] attribute [LegacyNullToEmptyString] UTF8String viewTransitionClass;
  [BindingTemplate=(CSS2Property, eCSSProperty_view_transition_name), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="dom.viewTransitions.enabled", BindingAlias="view-transition-name"] attribute [LegacyNullToEmptyString] UTF8String viewTransitionName;
  [BindingTemplate=(CSS2Property, eCSSProperty__webkit_text_stroke_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="WebkitTextStrokeWidth", BindingAlias="-webkit-text-stroke-width"] attribute [LegacyNullToEmptyString] UTF8String webkitTextStrokeWidth;
  [BindingTemplate=(CSS2Property, eCSSProperty_will_change), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="will-change"] attribute [LegacyNullToEmptyString] UTF8String willChange;
  [BindingTemplate=(CSS2Property, eCSSProperty_word_spacing), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="word-spacing"] attribute [LegacyNullToEmptyString] UTF8String wordSpacing;
  [BindingTemplate=(CSS2Property, eCSSProperty_object_position), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="object-position"] attribute [LegacyNullToEmptyString] UTF8String objectPosition;
  [BindingTemplate=(CSS2Property, eCSSProperty_perspective_origin), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="perspective-origin", BindingAlias="WebkitPerspectiveOrigin", BindingAlias="-webkit-perspective-origin", BindingAlias="webkitPerspectiveOrigin"] attribute [LegacyNullToEmptyString] UTF8String perspectiveOrigin;
  [BindingTemplate=(CSS2Property, eCSSProperty_fill), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String fill;
  [BindingTemplate=(CSS2Property, eCSSProperty_stroke), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String stroke;
  [BindingTemplate=(CSS2Property, eCSSProperty_grid_template_columns), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="grid-template-columns"] attribute [LegacyNullToEmptyString] UTF8String gridTemplateColumns;
  [BindingTemplate=(CSS2Property, eCSSProperty_grid_template_rows), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="grid-template-rows"] attribute [LegacyNullToEmptyString] UTF8String gridTemplateRows;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_image_source), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-image-source"] attribute [LegacyNullToEmptyString] UTF8String borderImageSource;
  [BindingTemplate=(CSS2Property, eCSSProperty_list_style_image), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="list-style-image"] attribute [LegacyNullToEmptyString] UTF8String listStyleImage;
  [BindingTemplate=(CSS2Property, eCSSProperty_grid_auto_columns), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="grid-auto-columns"] attribute [LegacyNullToEmptyString] UTF8String gridAutoColumns;
  [BindingTemplate=(CSS2Property, eCSSProperty_grid_auto_rows), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="grid-auto-rows"] attribute [LegacyNullToEmptyString] UTF8String gridAutoRows;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_window_transform), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, ChromeOnly, BindingAlias="-moz-window-transform"] attribute [LegacyNullToEmptyString] UTF8String MozWindowTransform;
  [BindingTemplate=(CSS2Property, eCSSProperty_transform), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="WebkitTransform", BindingAlias="-webkit-transform", BindingAlias="webkitTransform"] attribute [LegacyNullToEmptyString] UTF8String transform;
  [BindingTemplate=(CSS2Property, eCSSProperty_column_gap), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="column-gap", BindingAlias="grid-column-gap", BindingAlias="gridColumnGap"] attribute [LegacyNullToEmptyString] UTF8String columnGap;
  [BindingTemplate=(CSS2Property, eCSSProperty_row_gap), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="row-gap", BindingAlias="grid-row-gap", BindingAlias="gridRowGap"] attribute [LegacyNullToEmptyString] UTF8String rowGap;
  [BindingTemplate=(CSS2Property, eCSSProperty_marker_end), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="marker-end"] attribute [LegacyNullToEmptyString] UTF8String markerEnd;
  [BindingTemplate=(CSS2Property, eCSSProperty_marker_mid), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="marker-mid"] attribute [LegacyNullToEmptyString] UTF8String markerMid;
  [BindingTemplate=(CSS2Property, eCSSProperty_marker_start), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="marker-start"] attribute [LegacyNullToEmptyString] UTF8String markerStart;
  [BindingTemplate=(CSS2Property, eCSSProperty_contain_intrinsic_block_size), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="contain-intrinsic-block-size"] attribute [LegacyNullToEmptyString] UTF8String containIntrinsicBlockSize;
  [BindingTemplate=(CSS2Property, eCSSProperty_contain_intrinsic_height), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="contain-intrinsic-height"] attribute [LegacyNullToEmptyString] UTF8String containIntrinsicHeight;
  [BindingTemplate=(CSS2Property, eCSSProperty_contain_intrinsic_inline_size), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="contain-intrinsic-inline-size"] attribute [LegacyNullToEmptyString] UTF8String containIntrinsicInlineSize;
  [BindingTemplate=(CSS2Property, eCSSProperty_contain_intrinsic_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="contain-intrinsic-width"] attribute [LegacyNullToEmptyString] UTF8String containIntrinsicWidth;
  [BindingTemplate=(CSS2Property, eCSSProperty_grid_column_end), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="grid-column-end"] attribute [LegacyNullToEmptyString] UTF8String gridColumnEnd;
  [BindingTemplate=(CSS2Property, eCSSProperty_grid_column_start), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="grid-column-start"] attribute [LegacyNullToEmptyString] UTF8String gridColumnStart;
  [BindingTemplate=(CSS2Property, eCSSProperty_grid_row_end), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="grid-row-end"] attribute [LegacyNullToEmptyString] UTF8String gridRowEnd;
  [BindingTemplate=(CSS2Property, eCSSProperty_grid_row_start), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="grid-row-start"] attribute [LegacyNullToEmptyString] UTF8String gridRowStart;
  [BindingTemplate=(CSS2Property, eCSSProperty_max_block_size), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="max-block-size"] attribute [LegacyNullToEmptyString] UTF8String maxBlockSize;
  [BindingTemplate=(CSS2Property, eCSSProperty_max_height), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="max-height"] attribute [LegacyNullToEmptyString] UTF8String maxHeight;
  [BindingTemplate=(CSS2Property, eCSSProperty_max_inline_size), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="max-inline-size"] attribute [LegacyNullToEmptyString] UTF8String maxInlineSize;
  [BindingTemplate=(CSS2Property, eCSSProperty_max_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="max-width"] attribute [LegacyNullToEmptyString] UTF8String maxWidth;
  [BindingTemplate=(CSS2Property, eCSSProperty_cx), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String cx;
  [BindingTemplate=(CSS2Property, eCSSProperty_cy), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String cy;
  [BindingTemplate=(CSS2Property, eCSSProperty_offset_distance), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="offset-distance"] attribute [LegacyNullToEmptyString] UTF8String offsetDistance;
  [BindingTemplate=(CSS2Property, eCSSProperty_x), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String x;
  [BindingTemplate=(CSS2Property, eCSSProperty_y), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String y;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_bottom_left_radius), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-bottom-left-radius", BindingAlias="WebkitBorderBottomLeftRadius", BindingAlias="-webkit-border-bottom-left-radius", BindingAlias="webkitBorderBottomLeftRadius"] attribute [LegacyNullToEmptyString] UTF8String borderBottomLeftRadius;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_bottom_right_radius), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-bottom-right-radius", BindingAlias="WebkitBorderBottomRightRadius", BindingAlias="-webkit-border-bottom-right-radius", BindingAlias="webkitBorderBottomRightRadius"] attribute [LegacyNullToEmptyString] UTF8String borderBottomRightRadius;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_end_end_radius), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-end-end-radius"] attribute [LegacyNullToEmptyString] UTF8String borderEndEndRadius;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_end_start_radius), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-end-start-radius"] attribute [LegacyNullToEmptyString] UTF8String borderEndStartRadius;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_start_end_radius), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-start-end-radius"] attribute [LegacyNullToEmptyString] UTF8String borderStartEndRadius;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_start_start_radius), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-start-start-radius"] attribute [LegacyNullToEmptyString] UTF8String borderStartStartRadius;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_top_left_radius), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-top-left-radius", BindingAlias="WebkitBorderTopLeftRadius", BindingAlias="-webkit-border-top-left-radius", BindingAlias="webkitBorderTopLeftRadius"] attribute [LegacyNullToEmptyString] UTF8String borderTopLeftRadius;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_top_right_radius), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-top-right-radius", BindingAlias="WebkitBorderTopRightRadius", BindingAlias="-webkit-border-top-right-radius", BindingAlias="webkitBorderTopRightRadius"] attribute [LegacyNullToEmptyString] UTF8String borderTopRightRadius;
  [BindingTemplate=(CSS2Property, eCSSProperty_bottom), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String bottom;
  [BindingTemplate=(CSS2Property, eCSSProperty_inset_block_end), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="inset-block-end"] attribute [LegacyNullToEmptyString] UTF8String insetBlockEnd;
  [BindingTemplate=(CSS2Property, eCSSProperty_inset_block_start), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="inset-block-start"] attribute [LegacyNullToEmptyString] UTF8String insetBlockStart;
  [BindingTemplate=(CSS2Property, eCSSProperty_inset_inline_end), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="inset-inline-end"] attribute [LegacyNullToEmptyString] UTF8String insetInlineEnd;
  [BindingTemplate=(CSS2Property, eCSSProperty_inset_inline_start), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="inset-inline-start"] attribute [LegacyNullToEmptyString] UTF8String insetInlineStart;
  [BindingTemplate=(CSS2Property, eCSSProperty_left), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String left;
  [BindingTemplate=(CSS2Property, eCSSProperty_right), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String right;
  [BindingTemplate=(CSS2Property, eCSSProperty_top), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String top;
  [BindingTemplate=(CSS2Property, eCSSProperty_margin_block_end), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="margin-block-end"] attribute [LegacyNullToEmptyString] UTF8String marginBlockEnd;
  [BindingTemplate=(CSS2Property, eCSSProperty_margin_block_start), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="margin-block-start"] attribute [LegacyNullToEmptyString] UTF8String marginBlockStart;
  [BindingTemplate=(CSS2Property, eCSSProperty_margin_bottom), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="margin-bottom"] attribute [LegacyNullToEmptyString] UTF8String marginBottom;
  [BindingTemplate=(CSS2Property, eCSSProperty_margin_inline_end), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="margin-inline-end", BindingAlias="-moz-margin-end", BindingAlias="MozMarginEnd"] attribute [LegacyNullToEmptyString] UTF8String marginInlineEnd;
  [BindingTemplate=(CSS2Property, eCSSProperty_margin_inline_start), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="margin-inline-start", BindingAlias="-moz-margin-start", BindingAlias="MozMarginStart"] attribute [LegacyNullToEmptyString] UTF8String marginInlineStart;
  [BindingTemplate=(CSS2Property, eCSSProperty_margin_left), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="margin-left"] attribute [LegacyNullToEmptyString] UTF8String marginLeft;
  [BindingTemplate=(CSS2Property, eCSSProperty_margin_right), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="margin-right"] attribute [LegacyNullToEmptyString] UTF8String marginRight;
  [BindingTemplate=(CSS2Property, eCSSProperty_margin_top), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="margin-top"] attribute [LegacyNullToEmptyString] UTF8String marginTop;
  [BindingTemplate=(CSS2Property, eCSSProperty_block_size), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="block-size"] attribute [LegacyNullToEmptyString] UTF8String blockSize;
  [BindingTemplate=(CSS2Property, eCSSProperty_height), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String height;
  [BindingTemplate=(CSS2Property, eCSSProperty_inline_size), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="inline-size"] attribute [LegacyNullToEmptyString] UTF8String inlineSize;
  [BindingTemplate=(CSS2Property, eCSSProperty_min_block_size), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="min-block-size"] attribute [LegacyNullToEmptyString] UTF8String minBlockSize;
  [BindingTemplate=(CSS2Property, eCSSProperty_min_height), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="min-height"] attribute [LegacyNullToEmptyString] UTF8String minHeight;
  [BindingTemplate=(CSS2Property, eCSSProperty_min_inline_size), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="min-inline-size"] attribute [LegacyNullToEmptyString] UTF8String minInlineSize;
  [BindingTemplate=(CSS2Property, eCSSProperty_min_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="min-width"] attribute [LegacyNullToEmptyString] UTF8String minWidth;
  [BindingTemplate=(CSS2Property, eCSSProperty_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String width;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_block_end_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-block-end-width"] attribute [LegacyNullToEmptyString] UTF8String borderBlockEndWidth;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_block_start_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-block-start-width"] attribute [LegacyNullToEmptyString] UTF8String borderBlockStartWidth;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_bottom_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-bottom-width"] attribute [LegacyNullToEmptyString] UTF8String borderBottomWidth;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_inline_end_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-inline-end-width", BindingAlias="-moz-border-end-width", BindingAlias="MozBorderEndWidth"] attribute [LegacyNullToEmptyString] UTF8String borderInlineEndWidth;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_inline_start_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-inline-start-width", BindingAlias="-moz-border-start-width", BindingAlias="MozBorderStartWidth"] attribute [LegacyNullToEmptyString] UTF8String borderInlineStartWidth;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_left_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-left-width"] attribute [LegacyNullToEmptyString] UTF8String borderLeftWidth;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_right_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-right-width"] attribute [LegacyNullToEmptyString] UTF8String borderRightWidth;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_top_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-top-width"] attribute [LegacyNullToEmptyString] UTF8String borderTopWidth;
  [BindingTemplate=(CSS2Property, eCSSProperty_column_rule_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="column-rule-width"] attribute [LegacyNullToEmptyString] UTF8String columnRuleWidth;
  [BindingTemplate=(CSS2Property, eCSSProperty_outline_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="outline-width"] attribute [LegacyNullToEmptyString] UTF8String outlineWidth;
  [BindingTemplate=(CSS2Property, eCSSProperty_padding_block_end), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="padding-block-end"] attribute [LegacyNullToEmptyString] UTF8String paddingBlockEnd;
  [BindingTemplate=(CSS2Property, eCSSProperty_padding_block_start), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="padding-block-start"] attribute [LegacyNullToEmptyString] UTF8String paddingBlockStart;
  [BindingTemplate=(CSS2Property, eCSSProperty_padding_bottom), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="padding-bottom"] attribute [LegacyNullToEmptyString] UTF8String paddingBottom;
  [BindingTemplate=(CSS2Property, eCSSProperty_padding_inline_end), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="padding-inline-end", BindingAlias="-moz-padding-end", BindingAlias="MozPaddingEnd"] attribute [LegacyNullToEmptyString] UTF8String paddingInlineEnd;
  [BindingTemplate=(CSS2Property, eCSSProperty_padding_inline_start), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="padding-inline-start", BindingAlias="-moz-padding-start", BindingAlias="MozPaddingStart"] attribute [LegacyNullToEmptyString] UTF8String paddingInlineStart;
  [BindingTemplate=(CSS2Property, eCSSProperty_padding_left), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="padding-left"] attribute [LegacyNullToEmptyString] UTF8String paddingLeft;
  [BindingTemplate=(CSS2Property, eCSSProperty_padding_right), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="padding-right"] attribute [LegacyNullToEmptyString] UTF8String paddingRight;
  [BindingTemplate=(CSS2Property, eCSSProperty_padding_top), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="padding-top"] attribute [LegacyNullToEmptyString] UTF8String paddingTop;
  [BindingTemplate=(CSS2Property, eCSSProperty_r), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String r;
  [BindingTemplate=(CSS2Property, eCSSProperty_shape_margin), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="shape-margin"] attribute [LegacyNullToEmptyString] UTF8String shapeMargin;
  [BindingTemplate=(CSS2Property, eCSSProperty_rx), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String rx;
  [BindingTemplate=(CSS2Property, eCSSProperty_ry), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String ry;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_padding_block_end), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-padding-block-end"] attribute [LegacyNullToEmptyString] UTF8String scrollPaddingBlockEnd;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_padding_block_start), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-padding-block-start"] attribute [LegacyNullToEmptyString] UTF8String scrollPaddingBlockStart;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_padding_bottom), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-padding-bottom"] attribute [LegacyNullToEmptyString] UTF8String scrollPaddingBottom;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_padding_inline_end), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-padding-inline-end"] attribute [LegacyNullToEmptyString] UTF8String scrollPaddingInlineEnd;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_padding_inline_start), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-padding-inline-start"] attribute [LegacyNullToEmptyString] UTF8String scrollPaddingInlineStart;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_padding_left), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-padding-left"] attribute [LegacyNullToEmptyString] UTF8String scrollPaddingLeft;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_padding_right), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-padding-right"] attribute [LegacyNullToEmptyString] UTF8String scrollPaddingRight;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_padding_top), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-padding-top"] attribute [LegacyNullToEmptyString] UTF8String scrollPaddingTop;
  [BindingTemplate=(CSS2Property, eCSSProperty__moz_window_input_region_margin), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, ChromeOnly, BindingAlias="-moz-window-input-region-margin"] attribute [LegacyNullToEmptyString] UTF8String MozWindowInputRegionMargin;
  [BindingTemplate=(CSS2Property, eCSSProperty_outline_offset), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="outline-offset"] attribute [LegacyNullToEmptyString] UTF8String outlineOffset;
  [BindingTemplate=(CSS2Property, eCSSProperty_overflow_clip_margin), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="overflow-clip-margin"] attribute [LegacyNullToEmptyString] UTF8String overflowClipMargin;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_margin_block_end), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-margin-block-end"] attribute [LegacyNullToEmptyString] UTF8String scrollMarginBlockEnd;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_margin_block_start), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-margin-block-start"] attribute [LegacyNullToEmptyString] UTF8String scrollMarginBlockStart;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_margin_bottom), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-margin-bottom"] attribute [LegacyNullToEmptyString] UTF8String scrollMarginBottom;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_margin_inline_end), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-margin-inline-end"] attribute [LegacyNullToEmptyString] UTF8String scrollMarginInlineEnd;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_margin_inline_start), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-margin-inline-start"] attribute [LegacyNullToEmptyString] UTF8String scrollMarginInlineStart;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_margin_left), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-margin-left"] attribute [LegacyNullToEmptyString] UTF8String scrollMarginLeft;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_margin_right), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-margin-right"] attribute [LegacyNullToEmptyString] UTF8String scrollMarginRight;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_margin_top), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-margin-top"] attribute [LegacyNullToEmptyString] UTF8String scrollMarginTop;
  [BindingTemplate=(CSS2Property, eCSSProperty_background_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="background-color"] attribute [LegacyNullToEmptyString] UTF8String backgroundColor;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_block_end_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-block-end-color"] attribute [LegacyNullToEmptyString] UTF8String borderBlockEndColor;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_block_start_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-block-start-color"] attribute [LegacyNullToEmptyString] UTF8String borderBlockStartColor;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_bottom_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-bottom-color"] attribute [LegacyNullToEmptyString] UTF8String borderBottomColor;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_inline_end_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-inline-end-color", BindingAlias="-moz-border-end-color", BindingAlias="MozBorderEndColor"] attribute [LegacyNullToEmptyString] UTF8String borderInlineEndColor;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_inline_start_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-inline-start-color", BindingAlias="-moz-border-start-color", BindingAlias="MozBorderStartColor"] attribute [LegacyNullToEmptyString] UTF8String borderInlineStartColor;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_left_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-left-color"] attribute [LegacyNullToEmptyString] UTF8String borderLeftColor;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_right_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-right-color"] attribute [LegacyNullToEmptyString] UTF8String borderRightColor;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_top_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-top-color"] attribute [LegacyNullToEmptyString] UTF8String borderTopColor;
  [BindingTemplate=(CSS2Property, eCSSProperty_column_rule_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="column-rule-color"] attribute [LegacyNullToEmptyString] UTF8String columnRuleColor;
  [BindingTemplate=(CSS2Property, eCSSProperty_flood_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="flood-color"] attribute [LegacyNullToEmptyString] UTF8String floodColor;
  [BindingTemplate=(CSS2Property, eCSSProperty_lighting_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="lighting-color"] attribute [LegacyNullToEmptyString] UTF8String lightingColor;
  [BindingTemplate=(CSS2Property, eCSSProperty_outline_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="outline-color"] attribute [LegacyNullToEmptyString] UTF8String outlineColor;
  [BindingTemplate=(CSS2Property, eCSSProperty_stop_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="stop-color"] attribute [LegacyNullToEmptyString] UTF8String stopColor;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_decoration_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-decoration-color"] attribute [LegacyNullToEmptyString] UTF8String textDecorationColor;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_emphasis_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-emphasis-color"] attribute [LegacyNullToEmptyString] UTF8String textEmphasisColor;
  [BindingTemplate=(CSS2Property, eCSSProperty__webkit_text_fill_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="WebkitTextFillColor", BindingAlias="-webkit-text-fill-color"] attribute [LegacyNullToEmptyString] UTF8String webkitTextFillColor;
  [BindingTemplate=(CSS2Property, eCSSProperty__webkit_text_stroke_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="WebkitTextStrokeColor", BindingAlias="-webkit-text-stroke-color"] attribute [LegacyNullToEmptyString] UTF8String webkitTextStrokeColor;
  [BindingTemplate=(CSS2Property, eCSSProperty_background), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String background;
  [BindingTemplate=(CSS2Property, eCSSProperty_background_position), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="background-position"] attribute [LegacyNullToEmptyString] UTF8String backgroundPosition;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-color"] attribute [LegacyNullToEmptyString] UTF8String borderColor;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_style), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-style"] attribute [LegacyNullToEmptyString] UTF8String borderStyle;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-width"] attribute [LegacyNullToEmptyString] UTF8String borderWidth;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_top), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-top"] attribute [LegacyNullToEmptyString] UTF8String borderTop;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_right), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-right"] attribute [LegacyNullToEmptyString] UTF8String borderRight;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_bottom), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-bottom"] attribute [LegacyNullToEmptyString] UTF8String borderBottom;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_left), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-left"] attribute [LegacyNullToEmptyString] UTF8String borderLeft;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_block_start), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-block-start"] attribute [LegacyNullToEmptyString] UTF8String borderBlockStart;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_block_end), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-block-end"] attribute [LegacyNullToEmptyString] UTF8String borderBlockEnd;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_inline_start), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-inline-start", BindingAlias="-moz-border-start", BindingAlias="MozBorderStart"] attribute [LegacyNullToEmptyString] UTF8String borderInlineStart;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_inline_end), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-inline-end", BindingAlias="-moz-border-end", BindingAlias="MozBorderEnd"] attribute [LegacyNullToEmptyString] UTF8String borderInlineEnd;
  [BindingTemplate=(CSS2Property, eCSSProperty_border), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String border;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_radius), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-radius", BindingAlias="WebkitBorderRadius", BindingAlias="-webkit-border-radius", BindingAlias="webkitBorderRadius"] attribute [LegacyNullToEmptyString] UTF8String borderRadius;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_image), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-image", BindingAlias="WebkitBorderImage", BindingAlias="-webkit-border-image", BindingAlias="webkitBorderImage"] attribute [LegacyNullToEmptyString] UTF8String borderImage;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_block_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-block-width"] attribute [LegacyNullToEmptyString] UTF8String borderBlockWidth;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_block_style), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-block-style"] attribute [LegacyNullToEmptyString] UTF8String borderBlockStyle;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_block_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-block-color"] attribute [LegacyNullToEmptyString] UTF8String borderBlockColor;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_inline_width), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-inline-width"] attribute [LegacyNullToEmptyString] UTF8String borderInlineWidth;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_inline_style), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-inline-style"] attribute [LegacyNullToEmptyString] UTF8String borderInlineStyle;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_inline_color), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-inline-color"] attribute [LegacyNullToEmptyString] UTF8String borderInlineColor;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_block), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-block"] attribute [LegacyNullToEmptyString] UTF8String borderBlock;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_inline), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="border-inline"] attribute [LegacyNullToEmptyString] UTF8String borderInline;
  [BindingTemplate=(CSS2Property, eCSSProperty_overflow), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String overflow;
  [BindingTemplate=(CSS2Property, eCSSProperty_overflow_clip_box), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.overflow-clip-box.enabled", BindingAlias="overflow-clip-box"] attribute [LegacyNullToEmptyString] UTF8String overflowClipBox;
  [BindingTemplate=(CSS2Property, eCSSProperty_overscroll_behavior), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="overscroll-behavior"] attribute [LegacyNullToEmptyString] UTF8String overscrollBehavior;
  [BindingTemplate=(CSS2Property, eCSSProperty_container), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String container;
  [BindingTemplate=(CSS2Property, eCSSProperty_page_break_before), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="page-break-before"] attribute [LegacyNullToEmptyString] UTF8String pageBreakBefore;
  [BindingTemplate=(CSS2Property, eCSSProperty_page_break_after), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="page-break-after"] attribute [LegacyNullToEmptyString] UTF8String pageBreakAfter;
  [BindingTemplate=(CSS2Property, eCSSProperty_page_break_inside), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="page-break-inside"] attribute [LegacyNullToEmptyString] UTF8String pageBreakInside;
  [BindingTemplate=(CSS2Property, eCSSProperty_offset), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String offset;
  [BindingTemplate=(CSS2Property, eCSSProperty_columns), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String columns;
  [BindingTemplate=(CSS2Property, eCSSProperty_column_rule), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="column-rule"] attribute [LegacyNullToEmptyString] UTF8String columnRule;
  [BindingTemplate=(CSS2Property, eCSSProperty_font), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String font;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_variant), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="font-variant"] attribute [LegacyNullToEmptyString] UTF8String fontVariant;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_synthesis), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="font-synthesis"] attribute [LegacyNullToEmptyString] UTF8String fontSynthesis;
  [BindingTemplate=(CSS2Property, eCSSProperty_marker), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String marker;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_emphasis), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-emphasis"] attribute [LegacyNullToEmptyString] UTF8String textEmphasis;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_wrap), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-wrap"] attribute [LegacyNullToEmptyString] UTF8String textWrap;
  [BindingTemplate=(CSS2Property, eCSSProperty_white_space), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="white-space"] attribute [LegacyNullToEmptyString] UTF8String whiteSpace;
  [BindingTemplate=(CSS2Property, eCSSProperty__webkit_text_stroke), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="WebkitTextStroke", BindingAlias="-webkit-text-stroke"] attribute [LegacyNullToEmptyString] UTF8String webkitTextStroke;
  [BindingTemplate=(CSS2Property, eCSSProperty_list_style), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="list-style"] attribute [LegacyNullToEmptyString] UTF8String listStyle;
  [BindingTemplate=(CSS2Property, eCSSProperty_margin), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String margin;
  [BindingTemplate=(CSS2Property, eCSSProperty_margin_block), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="margin-block"] attribute [LegacyNullToEmptyString] UTF8String marginBlock;
  [BindingTemplate=(CSS2Property, eCSSProperty_margin_inline), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="margin-inline"] attribute [LegacyNullToEmptyString] UTF8String marginInline;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_margin), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-margin"] attribute [LegacyNullToEmptyString] UTF8String scrollMargin;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_margin_block), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-margin-block"] attribute [LegacyNullToEmptyString] UTF8String scrollMarginBlock;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_margin_inline), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-margin-inline"] attribute [LegacyNullToEmptyString] UTF8String scrollMarginInline;
  [BindingTemplate=(CSS2Property, eCSSProperty_outline), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String outline;
  [BindingTemplate=(CSS2Property, eCSSProperty_padding), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String padding;
  [BindingTemplate=(CSS2Property, eCSSProperty_padding_block), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="padding-block"] attribute [LegacyNullToEmptyString] UTF8String paddingBlock;
  [BindingTemplate=(CSS2Property, eCSSProperty_padding_inline), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="padding-inline"] attribute [LegacyNullToEmptyString] UTF8String paddingInline;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_padding), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-padding"] attribute [LegacyNullToEmptyString] UTF8String scrollPadding;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_padding_block), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-padding-block"] attribute [LegacyNullToEmptyString] UTF8String scrollPaddingBlock;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_padding_inline), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="scroll-padding-inline"] attribute [LegacyNullToEmptyString] UTF8String scrollPaddingInline;
  [BindingTemplate=(CSS2Property, eCSSProperty_flex_flow), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="flex-flow", BindingAlias="WebkitFlexFlow", BindingAlias="-webkit-flex-flow", BindingAlias="webkitFlexFlow"] attribute [LegacyNullToEmptyString] UTF8String flexFlow;
  [BindingTemplate=(CSS2Property, eCSSProperty_flex), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="WebkitFlex", BindingAlias="-webkit-flex", BindingAlias="webkitFlex"] attribute [LegacyNullToEmptyString] UTF8String flex;
  [BindingTemplate=(CSS2Property, eCSSProperty_gap), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="grid-gap", BindingAlias="gridGap"] attribute [LegacyNullToEmptyString] UTF8String gap;
  [BindingTemplate=(CSS2Property, eCSSProperty_grid_row), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="grid-row"] attribute [LegacyNullToEmptyString] UTF8String gridRow;
  [BindingTemplate=(CSS2Property, eCSSProperty_grid_column), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="grid-column"] attribute [LegacyNullToEmptyString] UTF8String gridColumn;
  [BindingTemplate=(CSS2Property, eCSSProperty_grid_area), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="grid-area"] attribute [LegacyNullToEmptyString] UTF8String gridArea;
  [BindingTemplate=(CSS2Property, eCSSProperty_grid_template), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="grid-template"] attribute [LegacyNullToEmptyString] UTF8String gridTemplate;
  [BindingTemplate=(CSS2Property, eCSSProperty_grid), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String grid;
  [BindingTemplate=(CSS2Property, eCSSProperty_place_content), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="place-content"] attribute [LegacyNullToEmptyString] UTF8String placeContent;
  [BindingTemplate=(CSS2Property, eCSSProperty_place_self), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="place-self"] attribute [LegacyNullToEmptyString] UTF8String placeSelf;
  [BindingTemplate=(CSS2Property, eCSSProperty_place_items), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="place-items"] attribute [LegacyNullToEmptyString] UTF8String placeItems;
  [BindingTemplate=(CSS2Property, eCSSProperty_position_try), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.anchor-positioning.enabled", BindingAlias="position-try"] attribute [LegacyNullToEmptyString] UTF8String positionTry;
  [BindingTemplate=(CSS2Property, eCSSProperty_inset), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String inset;
  [BindingTemplate=(CSS2Property, eCSSProperty_inset_block), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="inset-block"] attribute [LegacyNullToEmptyString] UTF8String insetBlock;
  [BindingTemplate=(CSS2Property, eCSSProperty_inset_inline), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="inset-inline"] attribute [LegacyNullToEmptyString] UTF8String insetInline;
  [BindingTemplate=(CSS2Property, eCSSProperty_contain_intrinsic_size), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="contain-intrinsic-size"] attribute [LegacyNullToEmptyString] UTF8String containIntrinsicSize;
  [BindingTemplate=(CSS2Property, eCSSProperty_mask), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="WebkitMask", BindingAlias="-webkit-mask", BindingAlias="webkitMask"] attribute [LegacyNullToEmptyString] UTF8String mask;
  [BindingTemplate=(CSS2Property, eCSSProperty_mask_position), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="mask-position", BindingAlias="WebkitMaskPosition", BindingAlias="-webkit-mask-position", BindingAlias="webkitMaskPosition"] attribute [LegacyNullToEmptyString] UTF8String maskPosition;
  [BindingTemplate=(CSS2Property, eCSSProperty_text_decoration), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="text-decoration"] attribute [LegacyNullToEmptyString] UTF8String textDecoration;
  [BindingTemplate=(CSS2Property, eCSSProperty_transition), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="WebkitTransition", BindingAlias="-webkit-transition", BindingAlias="webkitTransition"] attribute [LegacyNullToEmptyString] UTF8String transition;
  [BindingTemplate=(CSS2Property, eCSSProperty_animation), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, BindingAlias="WebkitAnimation", BindingAlias="-webkit-animation", BindingAlias="webkitAnimation"] attribute [LegacyNullToEmptyString] UTF8String animation;
  [BindingTemplate=(CSS2Property, eCSSProperty_scroll_timeline), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.scroll-driven-animations.enabled", BindingAlias="scroll-timeline"] attribute [LegacyNullToEmptyString] UTF8String scrollTimeline;
  [BindingTemplate=(CSS2Property, eCSSProperty_view_timeline), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.scroll-driven-animations.enabled", BindingAlias="view-timeline"] attribute [LegacyNullToEmptyString] UTF8String viewTimeline;
  [BindingTemplate=(CSS2Property, eCSSProperty_all), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem] attribute [LegacyNullToEmptyString] UTF8String all;
  [BindingTemplate=(CSS2Property, eCSSProperty_transform), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.transforms", BindingAlias="-moz-transform"] attribute [LegacyNullToEmptyString] UTF8String MozTransform;
  [BindingTemplate=(CSS2Property, eCSSProperty_perspective), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.transforms", BindingAlias="-moz-perspective"] attribute [LegacyNullToEmptyString] UTF8String MozPerspective;
  [BindingTemplate=(CSS2Property, eCSSProperty_perspective_origin), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.transforms", BindingAlias="-moz-perspective-origin"] attribute [LegacyNullToEmptyString] UTF8String MozPerspectiveOrigin;
  [BindingTemplate=(CSS2Property, eCSSProperty_backface_visibility), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.transforms", BindingAlias="-moz-backface-visibility"] attribute [LegacyNullToEmptyString] UTF8String MozBackfaceVisibility;
  [BindingTemplate=(CSS2Property, eCSSProperty_transform_style), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.transforms", BindingAlias="-moz-transform-style"] attribute [LegacyNullToEmptyString] UTF8String MozTransformStyle;
  [BindingTemplate=(CSS2Property, eCSSProperty_transform_origin), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.transforms", BindingAlias="-moz-transform-origin"] attribute [LegacyNullToEmptyString] UTF8String MozTransformOrigin;
  [BindingTemplate=(CSS2Property, eCSSProperty_appearance), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.moz-appearance.webidl.enabled", BindingAlias="-moz-appearance"] attribute [LegacyNullToEmptyString] UTF8String MozAppearance;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_feature_settings), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.font-features", BindingAlias="-moz-font-feature-settings"] attribute [LegacyNullToEmptyString] UTF8String MozFontFeatureSettings;
  [BindingTemplate=(CSS2Property, eCSSProperty_font_language_override), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.font-features", BindingAlias="-moz-font-language-override"] attribute [LegacyNullToEmptyString] UTF8String MozFontLanguageOverride;
  [BindingTemplate=(CSS2Property, eCSSProperty_box_sizing), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.box-sizing", BindingAlias="-moz-box-sizing"] attribute [LegacyNullToEmptyString] UTF8String MozBoxSizing;
  [BindingTemplate=(CSS2Property, eCSSProperty_transition_duration), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.transitions", BindingAlias="-moz-transition-duration"] attribute [LegacyNullToEmptyString] UTF8String MozTransitionDuration;
  [BindingTemplate=(CSS2Property, eCSSProperty_transition_timing_function), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.transitions", BindingAlias="-moz-transition-timing-function"] attribute [LegacyNullToEmptyString] UTF8String MozTransitionTimingFunction;
  [BindingTemplate=(CSS2Property, eCSSProperty_transition_property), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.transitions", BindingAlias="-moz-transition-property"] attribute [LegacyNullToEmptyString] UTF8String MozTransitionProperty;
  [BindingTemplate=(CSS2Property, eCSSProperty_transition_delay), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.transitions", BindingAlias="-moz-transition-delay"] attribute [LegacyNullToEmptyString] UTF8String MozTransitionDelay;
  [BindingTemplate=(CSS2Property, eCSSProperty_animation_name), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.animations", BindingAlias="-moz-animation-name"] attribute [LegacyNullToEmptyString] UTF8String MozAnimationName;
  [BindingTemplate=(CSS2Property, eCSSProperty_animation_duration), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.animations", BindingAlias="-moz-animation-duration"] attribute [LegacyNullToEmptyString] UTF8String MozAnimationDuration;
  [BindingTemplate=(CSS2Property, eCSSProperty_animation_timing_function), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.animations", BindingAlias="-moz-animation-timing-function"] attribute [LegacyNullToEmptyString] UTF8String MozAnimationTimingFunction;
  [BindingTemplate=(CSS2Property, eCSSProperty_animation_iteration_count), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.animations", BindingAlias="-moz-animation-iteration-count"] attribute [LegacyNullToEmptyString] UTF8String MozAnimationIterationCount;
  [BindingTemplate=(CSS2Property, eCSSProperty_animation_direction), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.animations", BindingAlias="-moz-animation-direction"] attribute [LegacyNullToEmptyString] UTF8String MozAnimationDirection;
  [BindingTemplate=(CSS2Property, eCSSProperty_animation_play_state), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.animations", BindingAlias="-moz-animation-play-state"] attribute [LegacyNullToEmptyString] UTF8String MozAnimationPlayState;
  [BindingTemplate=(CSS2Property, eCSSProperty_animation_fill_mode), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.animations", BindingAlias="-moz-animation-fill-mode"] attribute [LegacyNullToEmptyString] UTF8String MozAnimationFillMode;
  [BindingTemplate=(CSS2Property, eCSSProperty_animation_delay), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.animations", BindingAlias="-moz-animation-delay"] attribute [LegacyNullToEmptyString] UTF8String MozAnimationDelay;
  [BindingTemplate=(CSS2Property, eCSSProperty_border_image), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.border-image", BindingAlias="-moz-border-image"] attribute [LegacyNullToEmptyString] UTF8String MozBorderImage;
  [BindingTemplate=(CSS2Property, eCSSProperty_transition), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.transitions", BindingAlias="-moz-transition"] attribute [LegacyNullToEmptyString] UTF8String MozTransition;
  [BindingTemplate=(CSS2Property, eCSSProperty_animation), CEReactions, SetterThrows, SetterNeedsSubjectPrincipal=NonSystem, Pref="layout.css.prefixes.animations", BindingAlias="-moz-animation"] attribute [LegacyNullToEmptyString] UTF8String MozAnimation;
};